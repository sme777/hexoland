continue
n
s
n
side
neighbor
n
neighbor
n
s
n
neighbor
n
side
n
s
n
side
n
side
n
side
n
neighbor
n
s
n
monomer
n
monomer
n
monomer
n
side
n
side
s
n
neighbor
side
n
side
n
side
n
neighbor
n
s
n
monomer
n
monomer
n
neighbor_pos
n
side
neighbor
n
neighbor
n
monomer
s
n
monomer_map
assembly_block
n
neighbor_pos
n
neighbor
n
neighbor_pos
n
neighbor
n
neighbor_pos
n
neighbor
monomer_map[neighbor]
n
monomer_map[neighbor]
side
neighbor
n
s
n
hex_pos
n
monomer_map[monomer]
n
monomer_map[monomer]
n
side
n
assembly_block
monomer_map
n
neighbor_pos
n
monomer_map[monomer]
side
n
monomer_map[monomer]
neighbor_pos
n
side
n
side
n
side
neighbor
n
s
monomer
continue
monomer_bonds.keys
monomer_bonds
side
normalize_bonds_map[monomer][side] = send("#{side}_order", bonds)
bonds
n
continue
normalize_assembly_map(JSON.parse(self.design_map)).keys
normalize_assembly_map(JSON.parse(self.design_map))
JSON.parse(design_map).values.size
JSON.parse(design_map).values
JSON.parse(design_map)
design_map
monomer_bonds.keys
monomer_bonds
continue
@assembly.normalize_bonds
continue
normalize_bonds_map
n
normalize_bonds_map
n
normalize_bonds_map
n
normalize_bonds_map
n
normalize_bonds_map
n
normalize_bonds_map
n
normalize_bonds_map
n
normalize_bonds_map
n
normalize_bonds_map
n
normalize_bonds_map
send("#{side}_order", bonds)
side
continue
normalize_bonds_map
n
normalize_bonds_map[monomer][side] = send("#{side}_order", [bonds[0][0], bonds[1]])
n
normalize_bonds_map[monomer][side] = send("#{side}_order", [bonds[0][0], bonds[1]])
n
normalize_bonds_map[monomer][side] = send("#{side}_order", [bonds[0][0], bonds[1]])
[bonds[0][0], bonds[1]]
continue
normalize_bonds_map
continue
assembly_block.values.size
assembly_block.values
continue
bonds[0]
bonds
side
n
side
bonds
s
sides.keys
continue
sides.keys
continue
sides.keys
continue
sides.keys
continue
sides.keys
sides
continue
block_map
block_map[pairing][monomer][side]
monomer
side
continue
hex[side][1]
hex[side]
continue
selection
continue
selection
continue
neighbor
n
s
n
s
n
assembly_map.keys
assembly_map
continue
neighbor
json_part, _trailing = neighbor.split("#", 2)
json_part, _trailing = stringified_json.split("#", 2)
JSON.parse(neighbor)
neighbor
n
neighbors
side
n
monomer_map
n
neighbor_pos
n
neighbor_pos
n
side
neighbor
n
neighbors
side
s
hex_pos
n
assembly_block
n
assembly_block
monomer_map
n
monomer_map
monomer
s
n
continue
assembly_map["M1#1"]["ZU"].first
assembly_map["M1#1"]
assembly_map["M1#1"]["ZU"]
assembly_map["M1#1"].keys
assembly_map["M1#1"]
horiz3_8
horiz3_4
monomer_map["M1#3"]
monomer_map["M1#2"]
monomer_map["M1#1"]
assembly_map.keys
monomer_map.size
monomer_map
assembly_block.size
assembly_block
continue
