continue
neighbor_group
neighbor
neighbor[1]
side
side == "S6" && neighbor[1] == bond_family_name
n
side
neighbor
n
s
block
n
block
n
block
n
block
n
block
n
block
neighbor
n
neighbor_map
side
neighbor
n
side
neighbor
n
neighbor
s
n
block
neighbor
side
n
side
n
side
neighbor
s
n
neighbor_map[block][side]
[neighbor_map[block][side], [s36s[s36_idx][0], s36_score]]
neighbor_map[block][side]
n
s36s
n
side == "S3" && neighbor[1] == bond_family_name
neighbor[1] == bond_family_name
neighbor[1]
neighbor
side
n
s
continue
n
side
neighbor
n
neighbor
neighbors
block
s
side
s
n
s25_side_count
n
bond_family_name
continue
bond_family_name
bond_family_namre
continue
monomer_bonds
bonds
continue
bonds
continue
bonds
continue
bonds
continue
bonds
bonds[0].is_a?(Array)
continue
bonds[0].is_a?(Array)
bonds
continue
bonds
continue
neighbor
side
s
block
s
neighbor_map
continue
n
s25s
n
s
continue
n
z_count
s36_side_count
s25_side_count
s14_side_count
n
s
continue
s3_side_count
s2_side_count
s1_side_count
bond_family_name
bond_family
n
s
build_from_neighbors(bond_map, bond_family_name, bond_family_params)
build_from_neighbors(bond_map, bond_family_name, bond_family_params
continue
n
bond_families
structure_map
continue
start_pos
monomer_map[monomer]
monomer
monomer_map
n
monomer
monomer_map
n
monomer
monomer_map
n
sides
monomer
n
s
n
monomer_map
continue
n
s36_side_count
s25_side_count
s14_side_count
n
s14_side_count
n
bond_family_params
bond_family_name
continue
n
s
n
continue
s
n
continue
merge_map.keys.size != 1
design_map
merge_map.keys.size
merge_map
n
merge_assembly.design_map
continue
self.name
self
assembly
design_map
self.design_map
continue
build_from_neighbors(bond_map, bond_family_name, bond_family_params)
s
build_from_neighbors(bond_map, bond_family_name, bond_family_params)
continue
add_self_reference(bonds.dup, structure[-2..-1])
continue
bds[0][0]
bds[0]
bds
"#{bds[0][0]}#{number}"
bds[0][0]}#{number}
"#{bds[0]}#{number}"
!bds[0][0].include?("#")
bds[0][0].include?("#")
bds[0].include?("#")
bds[0]
bds
s
continue
add_self_reference(bonds.dup, structure[-2..-1])
continue
add_self_reference(bonds.dup, structure[-2..-1])
continue
add_self_reference(bonds.dup, structure[-2..-1])
normalized_assembly_map
structure
monomer
"#{monomer}#{structure[-2..-1]}"
normalized_assembly_map["#{monomer}#{structure[-2..-1]}"]
continue
normalize_assembly_map(parse_design_map)
normalize_assembly_map(assembly_map)
parse_design_map
assembly_map
neighbors
side
s
n
s
n
monomer_map
n
assembly_map
continue
assembly_map
n
assembly_map
continue
block_map
n
block_map
continue
neighbors
neighbor
n
s
n
assembly_block
n
monomer_map
n
s
n
monomer_map
n
assembly_map
n
s
normalized_assembly_map
n
add_self_reference(bonds.dup, structure[-2..-1])
s
add_self_reference(bonds.dup, structure[-2..-1])
s
n
s
n
parse_design_map.keys
parse_design_map
continue
monomer_bonds.keys
