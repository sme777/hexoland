continue
neighbor
block_map[pairing][neighbor]
continue
n
last_z_idx
n
z_idx
z_tails[-1]
z_tails[0]
z_tails
n
continue
n
get_combinations(BondGenerator.tail_groups_4bonds[0], 
                                                BondGenerator.tail_groups_4bonds[1],
                                                BondGenerator.tail_groups_4bonds[2],
                                                BondGenerator.tail_groups_4bonds[3])
BondGenerator.tail_groups_4bonds[3]
BondGenerator.tail_groups_4bonds[2]
BondGenerator.tail_groups_4bonds[1]
BondGenerator.tail_groups_4bonds[0]
continue
used_bonds["ZU"][0]
used_bonds["ZU"]
z_bonds
z_count
continue
add_neutrals(side, hex[side][1][0], hex[side][1][1]).size
continue
add_neutrals(side, hex[side][1][0], hex[side][1][1]).size
continue
add_neutrals(side, hex[side][1][0], hex[side][1][1]).size
continue
add_neutrals(side, hex[side][1][0], hex[side][1][1]).size
continue
hex
hex[side]
hex[side][1][0]
side
continue
s14s
n
count
number
s
continue
s36s
s25s
s14s
n
continue
s36s
s25s
s14s
n
continue
n
best_sides_out_of("S36", "handles", xy_trails, [], count=s36_side_count, number=attr_bonds/2, overlap=max_xy_overlap, godmode=false, min_xy_fe, max_xy_fe)
continue
max_xy_fe
min_xy_fe
max_xy_overlap
attr_bonds/2
s36_side_count
best_sides_out_of("S36", "handles", xy_trails, [], count=s36_side_count, number=attr_bonds/2, overlap=max_xy_overlap, godmode=false, min_xy_fe, max_xy_fe)
s36_side_count
s14_side_count
continue
z_trials
max_z_overlap
z_count
z_bonds
best_z_bonds_out_of(z_bonds, z_count, max_z_overlap, z_trials, min_z_fe, max_z_fe)
z_count
z_tails
curr_z_idx_count
z_tails[curr_z_idx_count]
n
neighbor_map[neighbor].nil?
neighbor
continue
(final_volume.to_f * 10**-6 * (scaffold_final_concetration.to_f * 10**-9) / (scaffold_start_concetration.to_f * 10**-9)) * 10**9
continue
staple_volume / 8.to_f
staple_volume / 8
staple_volume
(staple_volume / 8) * 96
buffer_volume
continue
n
continue
buffer_picklist
n
add_scaffold
add_buffer
continue
buffer_volume
scaffold_volume
staple_volume
continue
50.00000000000001.to_i / 25
50.00000000000001.to_i // 25
50.00000000000001.to_i % 25
50.00000000000001.to_i
50.00000000000001.to_i % 25
50.00000000000001 % 25
(final_volume.to_f * 10**-6 * (staple_ratio.to_f * scaffold_final_concetration.to_f * 10**-9) / (staple_concetration.to_f * 10**-6)) * 10**9
(final_volume.to_f * 10**-6 * (scaffold_final_concetration.to_f * 10**-9) / (scaffold_start_concetration.to_f * 10**-9)) * 10**9
(final_volume.to_f * 10**-6 * (scaffold_final_concetration.to_f * 10**-9) / scaffold_start_concetration.to_f * 10**-9) * 10**9
staple_concetration.to_f * 10**-6
staple_concetration * 10**-6
staple_ratio.to_f * scaffold_final_concetration.to_f * 10**-9
final_volume
staple_volume
scaffold_final_concetration.to_f * 10**-9
staple_concetration.to_f * 10**-6
staple_ratio
scaffold_final_concetration
staple_concetration
staple_volume
n
continue
scaffold_start_concetration
continue
scaffold_start_concetration
final_volume
continue
scaffold_volume
scaffold
buffer_volume
continue
staple_volume
buffer_volume
continue
final_volume.to_f
final_volume
buffer_volume
scaffold_volume
continue
staple_ratio.to_f * scaffold_concetration.to_f * 10**-9
scaffold_concetration.to_f
scaffold_concetration
final_volume.to_f
final_volume
n
block
n
design_map[block]["building_blocks"].nil?
design_map[block]["building_blocks"]
block
s
n
continue
neighbor
neighbor_map[neighbor]["ZU"][1]
neighbor_map[neighbor]
continue
n
continue
n
continue
n
s14_side_count
1.0/attr_bonds
best_sides_out_of("S14", "handles", trials, [], count=s14_side_count, number=attr_bonds/2, overlap=1/attr_bonds, godmode=false, 0, 200)
s36_side_count
s25_side_count
s25_side-count
s14_side_count
continue
block_map[pairing]
pairing
neighbor
continue
z_idx
s14_idx
n
continue
n
continue
s14_side_count
last_s25_idx
last_s14_idx
z_count
z_head_count
z_tail_count
z_tails[3]
z_tails
last_z_idx
n
z_tails
continue
attr_bonds
z_bonds
continue
all_seqs.size
continue
all_seqs.size
continue
all_seqs.size
continue
all_seqs.size
continue
all_seqs.size
continue
all_seqs.size
continue
all_seqs.size
continue
all_seqs.size
continue
all_seqs.size
continue
all_seqs.size
continue
all_seqs.size
continue
all_seqs.size
continue
all_seqs.size
continue
all_seqs.size
continue
all_seqs.size
continue
all_seqs.size
all_seqs
continue
n
s
n
type
continue
n
t_count
b_count
b_count, t_count = type.match(/(\d+)B(\d+)T/).captures.map(&:to_i)
type.match(/(\d+)B(\d+)T/).captures.map(&:to_i)
type.match(/(\d+)B(\d+)T/)
type
continue
type
continue
type
continue
n
type
continue
type
continue
type
continue
type
continue
type
