continue
ZU_types()[:H1]
continue
ZU_types()[:H1]
ZU_types()["H1"]
ZU_types("H1")
helix
ZU_types()
ZU_types()[helix]
ZU_types()[helix] == "P" ? 1 : (ZU_types()[helix] == "S" ? 0 : "-")
side
continue
normalize_bonds_map
continue
zBondToIndex[helix]
continue
zBondToIndex[helix]
helix
continue
bonds[1]
bonds
helices
helix
continue
normalize_bonds_map
continue
bds
bds[1][0] = bds[1][0] + t_bonds
continue
bds
bds[1] = bds[1][0] + t_bonds
bds
continue
hex[side][0][1]
hex[side][1]
add_neutrals(side, hex[side][1], hex[side][0][1])
add_repulsive(side, hex[side][1]).size
add_repulsive(side, hex[side][1])
add_bonds(side, hex[side][1], "BS").size
continue
add_bonds(side, hex[side][1], "BS")
continue
hex[side]
hex[side][1]
hex[side][1][0]
side
bonds
add_bonds
continue
structure_map["7Z#1"]
structure_map.keys
structure_map
continue
bds[1] = bds[1][0] + t_bonds
bds[1]
bds[0]
continue
t_bonds
continue
n
continue
n
s
t_count
continue
t_bonds
t_bonds_assigned
continue
bds[1][0]
bds
side
bds[0]
bds[1][0]
bds[1]
bds
t_count
b_count
continue
item
continue
item
continue
unit
continue
unit
bds
continue
unit
side_map
unit
n
unit
side_map
s
continue
structure_map
n
structure_map
n
pairing_map
continue
n
s
n
side
neighbor
n
neighbor
n
s
n
neighbor
n
side
n
s
n
side
n
side
n
side
n
neighbor
n
s
n
monomer
n
monomer
n
monomer
n
side
n
side
s
n
neighbor
side
n
side
n
side
n
neighbor
n
s
n
monomer
n
monomer
n
neighbor_pos
n
side
neighbor
n
neighbor
n
monomer
s
n
monomer_map
assembly_block
n
neighbor_pos
n
neighbor
n
neighbor_pos
n
neighbor
n
neighbor_pos
n
neighbor
monomer_map[neighbor]
n
monomer_map[neighbor]
side
neighbor
n
s
n
hex_pos
n
monomer_map[monomer]
n
monomer_map[monomer]
n
side
n
assembly_block
monomer_map
n
neighbor_pos
n
monomer_map[monomer]
side
n
monomer_map[monomer]
neighbor_pos
n
side
n
side
n
side
neighbor
n
s
monomer
continue
monomer_bonds.keys
monomer_bonds
side
normalize_bonds_map[monomer][side] = send("#{side}_order", bonds)
bonds
n
continue
normalize_assembly_map(JSON.parse(self.design_map)).keys
normalize_assembly_map(JSON.parse(self.design_map))
JSON.parse(design_map).values.size
JSON.parse(design_map).values
JSON.parse(design_map)
design_map
monomer_bonds.keys
monomer_bonds
continue
@assembly.normalize_bonds
continue
normalize_bonds_map
n
normalize_bonds_map
n
normalize_bonds_map
n
normalize_bonds_map
n
normalize_bonds_map
n
normalize_bonds_map
n
normalize_bonds_map
n
normalize_bonds_map
n
normalize_bonds_map
n
normalize_bonds_map
send("#{side}_order", bonds)
side
continue
normalize_bonds_map
n
